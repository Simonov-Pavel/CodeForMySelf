
//Basic Filter
	//:animated  - Выделите все элементы, которые находятся в процессе анимации в момент запуска селектора.
	//:eq() - (устарел - .eq()) Выберите элемент с индексом n в пределах согласованного набора.
	//:even - (устарел - .even()) Выбирает четные элементы с нулевой индексацией.
	//:first - (устарел - .first()) Выбирает первый совпадающий элемент DOM.
	//:focus - Выбирает элемент, если он в данный момент сфокусирован.
	//:gt() - (устарел - .slice(),  Например, :gt(3)можно заменить вызовом на .slice(4)) Выберите все элементы с индексом, превышающим индекс в пределах согласованного набора.
	//:header - Выбирает все элементы, которые являются заголовками, например h1, h2, h3 и так далее.
	//:lang() - Выбирает все элементы указанного языка.
	//:last - (устарел - .last() ) Выбирает последний согласованный элемент.
	//:lt() - (устарел - .slice(),  Например, :lt(3)можно заменить вызовом на .slice( 0, 3 )) Выберите все элементы с индексом меньше индекса в пределах согласованного набора.
	//:not() - Выбирает все элементы, которые не соответствуют данному селектору.
	//:odd - (устарел - .odd) Выбирает нечетные элементы, индексируемые нулем.
	//:root - Выбирает элемент, являющийся корнем документа.
	//:target - Выбирает целевой элемент, указанный идентификатором фрагмента URI документа.

//Child Filter
	//:first-child - Выбирает все элементы, которые являются первым дочерним элементом их родителя.
	//:first-of-type - Выбирает все элементы, которые являются первыми среди братьев и сестер с одинаковым именем элемента.
	//:last-child - Выбирает все элементы, которые являются последними дочерними элементами своего родителя.
	//:last-of-type - Выбирает все элементы, которые являются последними среди братьев и сестер с одинаковым именем элемента.
	//:nth-child() - Выбирает все элементы, которые являются N-М дочерним элементом их родителя.
	//:nth-last-child() - Выбирает все элементы, являющиеся N-м потомком своего родителя, считая от последнего элемента до первого.
	//:nth-last-of-type() - Выбирает все элементы, являющиеся N-м потомком своего родителя по отношению к братьям и сестрам с одинаковым именем элемента, считая от последнего элемента до первого.
	//:nth-of-type() - Выбирает все элементы, являющиеся N-М дочерним элементом своего родителя по отношению к братьям и сестрам с одинаковым именем элемента.
	//:only-child - Выбирает все элементы, которые являются единственным дочерним элементом их родителя.
	//:only-of-type - Выбирает все элементы, у которых нет братьев и сестер с одинаковым именем элемента.

//Content Filter
	//:contains() - Выделите все элементы, содержащие указанный текст.
	//:empty - Выделите все элементы, не имеющие дочерних элементов (включая текстовые узлы).
	//:has() - Выбирает элементы, содержащие по крайней мере один элемент, соответствующий указанному селектору.
	//:parent - Выделите все элементы, имеющие хотя бы один дочерний узел (элемент или текст).
//Form
	//:button - Выделяет все элементы кнопки и элементы типа button.
	//:checkbox - Устанавливает флажок все элементы типа.
	//:checked - Соответствует всем элементам, которые были проверены или выбраны.
	//:disabled - Выбирает все элементы, которые отключены.
	//:enabled - Выбирает все элементы, которые включены.
	//:file - Выделяет все элементы типа file.
	//:focus - Выбирает элемент, если он в данный момент сфокусирован.
	//:image - Выделяет все элементы типа image.
	//:input - Выделяет все элементы input, textarea, select и button.
	//:password - Выбирает все элементы типа password.
	//:radio - Выбирает все элементы типа радио.
	//:reset - Выбирает все элементы типа reset.
	//:selected - Выделяет все выбранные элементы.
	//:submit - Выбирает все элементы типа submit.
	//:text - Выделяет все входные элементы типа text.


jQuery(function($) {
			//Выбрать элементы по имени атрибута. 
//[name="value"] - выбирает элементы, у которых указанный атрибут (name) имеет значение value.	
	//$('a[href = "index.html"]').css({'color':'green'});
//[name|="value"] - выбирает элементы, которые имеют указанный атрибут (name) со значением, равным заданной строки (value) или начинающимся с этой строки (value), за которой следует дефис.
	//$('a[href |= "index"]').css({'color':'green'});
//[name*="value"] - - выбирает элементы, который имеют указанный атрибут (name) со значением, содержащим заданную подстроку (value).
	//$('a[href *= "index"]').css({'color':'green'});
//[name~="value"] - выбирает элементы, которые имеют указанный атрибут (name) со значением, содержащим заданное значение (value) как одно из его значений (т.е. отделенно от другого значения пробелом) или равным этому значению (value).
	//$('a[href ~= "index"]').css({'color':'green'});
//[name$="value"] - выбирает элементы, которые имеют указанный атрибут (name) со значением, которое заканчивается заданным значением (value).
	//$('a[href $= "html"]').css({'color':'green'});
//[name!="value"] - выбирает элементы, которые не имеют указанный атрибут (name) или имеют указанный атрибут (name), но он не содержит заданного значения (value).
	//$('a[href != "index"]').css({'color':'green'});
//[name^="value"] - выбирает элементы, которые имеют указанный атрибут (name) со значением, начинающимся с заданного значения (value).
	//$('a[href ^= "index"]').css({'color':'green'});
//[name] - выбирает элементы, которые имеют указанный атрибут (name). Значение данного атрибута (name) может быть любым.
	//$('img[src]').css({'border':'3px solid red'});
	
			//Выбрать первый элемент из множества элементов.
	//$('div').first().css({'border': '2px solid green'});

			//Выбрать последний элемент из множества элементов.
	//$('div').last().css({'border': '2px solid green'});

			//Выбрать третий элемент из множества.
	//$('li:nth-child(3)').css({'border': '2px solid green'});

			//Выбрать последний дочерний элемент.
	//$('li:last-child').css({'border': '2px solid green'});

			//Выбрать пустой элемент div
	$('div:empty').css({'border': '2px solid green'});

});